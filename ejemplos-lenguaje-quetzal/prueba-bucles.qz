/*
 Archivo de prueba para bucles en Quetzal v0.0.1
 Prueba todos los tipos de bucles disponibles
*/

imprimir_exito("=== PRUEBA DE BUCLES ===")

// ===== BUCLE FOR TRADICIONAL =====
imprimir_informacion("1. Probando bucle for tradicional...")

imprimir("Contando del 1 al 5:")
para (entero i = 1; i <= 5; i++) {
    imprimir("Número: " + i.cadena())
}

imprimir("Contando hacia atrás del 5 al 1:")
para (entero j = 5; j >= 1; j--) {
    imprimir("Número: " + j.cadena())
}

// ===== BUCLE WHILE =====
imprimir_informacion("2. Probando bucle while...")

entero mut contador = 0
imprimir("Contando con while hasta 3:")
mientras (contador < 3) {
    contador++
    imprimir("Contador: " + contador.cadena())
}

entero mut suma = 0
entero mut valor_num = 1
imprimir("Sumando números del 1 al 4:")
mientras (valor_num <= 4) {
    suma += valor_num
    imprimir("Sumando " + valor_num.cadena() + ", total: " + suma.cadena())
    valor_num++
}

// ===== BUCLE DO-WHILE =====
imprimir_informacion("3. Probando bucle do-while...")

entero mut valor = 0
imprimir("Ejecutando do-while (se ejecuta al menos una vez):")
hacer {
    valor++
    imprimir("Valor en do-while: " + valor.cadena())
} mientras (valor < 3)

entero mut verificacion = 10
imprimir("Do-while que no cumple condición inicial:")
hacer {
    imprimir("Se ejecuta una vez: " + verificacion.cadena())
    verificacion++
} mientras (verificacion < 10)

// ===== BUCLE FOREACH =====
imprimir_informacion("4. Probando bucle foreach...")

lista<cadena> frutas = ["manzana", "banana", "naranja", "uva"]
imprimir("Iterando sobre lista de frutas:")
para (cadena fruta en frutas) {
    imprimir("Fruta: " + fruta)
}

lista<entero> numeros_lista = [10, 20, 30, 40, 50]
imprimir("Iterando sobre lista de números:")
para (entero valor_actual en numeros_lista) {
    imprimir("Número: " + valor_actual.cadena())
}

lista tipos_mixtos = [42, "texto", verdadero, 3.14]
imprimir("Iterando sobre lista mixta:")
para (elemento en tipos_mixtos) {
    imprimir("Elemento: " + elemento.cadena())
}

// ===== BUCLES ANIDADOS =====
imprimir_informacion("5. Probando bucles anidados...")

imprimir("Tabla de multiplicar (2x3):")
para (entero fila = 1; fila <= 2; fila++) {
    para (entero columna = 1; columna <= 3; columna++) {
        entero producto = fila * columna
        imprimir("(" + fila.cadena() + "," + columna.cadena() + ") = " + producto.cadena())
    }
}

// ===== CONTROL DE FLUJO EN BUCLES =====
imprimir_informacion("6. Probando control de flujo...")

imprimir("Usando 'continuar' para saltar números pares:")
para (entero i = 1; i <= 6; i++) {
    si (i % 2 == 0) {
        continuar
    }
    imprimir("Número impar: " + i.cadena())
}

imprimir("Usando 'romper' para salir del bucle en 3:")
para (entero i = 1; i <= 10; i++) {
    si (i == 4) {
        romper
    }
    imprimir("Antes de romper: " + i.cadena())
}

imprimir_exito("✓ Todas las pruebas de bucles completadas")
