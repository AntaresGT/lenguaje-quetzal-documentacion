/*
 Archivo de prueba para conversiones de tipos en Quetzal v0.0.1
 Prueba todas las conversiones de tipos disponibles
*/

imprimir_exito("=== PRUEBA DE CONVERSIONES DE TIPOS ===")

// ===== CONVERSIONES DESDE CADENA =====
imprimir_informacion("1. Probando conversiones desde cadena...")

// Cadena a entero
cadena texto_entero = "123"
entero valor_convertido = texto_entero.entero()
imprimir("Cadena \"123\" a entero: " + valor_convertido.cadena())

cadena texto_negativo = "-456"
entero valor_negativo = texto_negativo.entero()
imprimir("Cadena \"-456\" a entero: " + valor_negativo.cadena())

// Cadena a número
cadena texto_decimal = "123.456"
número decimal_convertido = texto_decimal.numero()
imprimir("Cadena \"123.456\" a número: " + decimal_convertido.cadena())

cadena texto_decimal_negativo = "-78.9"
número decimal_negativo = texto_decimal_negativo.numero()
imprimir("Cadena \"-78.9\" a número: " + decimal_negativo.cadena())

// Cadena a booleano
cadena texto_verdadero = "verdadero"
bool bool_verdadero = texto_verdadero.bool()
imprimir("Cadena \"verdadero\" a bool: " + bool_verdadero.cadena())

cadena texto_falso = "falso"
bool bool_falso = texto_falso.bool()
imprimir("Cadena \"falso\" a bool: " + bool_falso.cadena())

// ===== CONVERSIONES A CADENA =====
imprimir_informacion("2. Probando conversiones a cadena...")

// Entero a cadena
entero entero_original = 789
cadena entero_texto = entero_original.cadena()
imprimir("Entero 789 a cadena: \"" + entero_texto + "\"")

// Número a cadena
número decimal_original = 456.789
cadena decimal_texto = decimal_original.cadena()
imprimir("Número 456.789 a cadena: \"" + decimal_texto + "\"")

// Booleano a cadena
bool valor_verdadero = verdadero
bool valor_falso = falso
cadena bool_verdadero_texto = valor_verdadero.cadena()
cadena bool_falso_texto = valor_falso.cadena()
imprimir("Booleano verdadero a cadena: \"" + bool_verdadero_texto + "\"")
imprimir("Booleano falso a cadena: \"" + bool_falso_texto + "\"")

// ===== CONVERSIONES DE LISTAS =====
imprimir_informacion("3. Probando conversiones de listas...")

// Lista a cadena
lista<entero> lista_numeros = [1, 2, 3, 4, 5]
cadena lista_texto = lista_numeros.cadena()
imprimir("Lista [1,2,3,4,5] a cadena: " + lista_texto)

lista<cadena> lista_palabras = ["hola", "mundo", "quetzal"]
cadena palabras_texto = lista_palabras.cadena()
imprimir("Lista de palabras a cadena: " + palabras_texto)

lista lista_mixta = [42, "texto", verdadero, 3.14]
cadena mixta_texto = lista_mixta.cadena()
imprimir("Lista mixta a cadena: " + mixta_texto)

// Cadena a lista
cadena elementos_separados = "1,2,3,4,5"
lista lista_convertida = elementos_separados.lista()
imprimir("Cadena \"1,2,3,4,5\" a lista: " + lista_convertida.cadena())

// ===== CONVERSIONES DE JSON =====
imprimir_informacion("4. Probando conversiones de JSON...")

// Objeto a cadena
jsn objeto_simple = {
    nombre: "Juan",
    edad: 30,
    activo: verdadero
}
cadena objeto_texto = objeto_simple.cadena()
imprimir("Objeto JSON a cadena: " + objeto_texto)

// Cadena a JSON
cadena json_texto = '{"producto": "laptop", "precio": 1200, "disponible": verdadero}'
jsn objeto_convertido = json_texto.jsn()
imprimir("Cadena a JSON: " + objeto_convertido.cadena())

// JSON complejo
jsn objeto_complejo = {
    datos: {
        lista_valores: [1, 2, 3],
        configuracion: {
            activo: verdadero,
            nivel: 5
        }
    },
    metadata: "información adicional"
}
cadena complejo_texto = objeto_complejo.cadena()
imprimir("JSON complejo a cadena: " + complejo_texto)

// ===== CONVERSIONES ENTRE TIPOS NUMÉRICOS =====
imprimir_informacion("5. Probando conversiones entre tipos numéricos...")

// Entero a número (implícita en operaciones)
entero entero_base = 42
número decimal_desde_entero = entero_base + 0.0
imprimir("Entero 42 como número: " + decimal_desde_entero.cadena())

// Número a entero (truncamiento)
número decimal_base = 123.789
entero entero_truncado = decimal_base.entero()
imprimir("Número 123.789 truncado a entero: " + entero_truncado.cadena())

// ===== CONVERSIONES CON OPERACIONES =====
imprimir_informacion("6. Probando conversiones en operaciones...")

// Concatenación automática
entero valor_numerico = 100
cadena resultado_auto = "El valor es: " + valor_numerico.cadena()
imprimir("Concatenación automática: " + resultado_auto)

// Conversión en comparaciones
cadena valor_como_texto = "50"
entero valor_comparar = 50
bool son_iguales = valor_como_texto.entero() == valor_comparar
imprimir("\"50\".entero() == 50: " + son_iguales.cadena())

// Conversiones en cálculos
cadena valor1_texto = "25"
cadena valor2_texto = "15"
entero suma_convertida = valor1_texto.entero() + valor2_texto.entero()
imprimir("\"25\".entero() + \"15\".entero(): " + suma_convertida.cadena())

imprimir_exito("✓ Todas las pruebas de conversiones completadas")
